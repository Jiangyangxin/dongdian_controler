<launch>
  <!--若使用了bag的虚拟时间，use_sim_time可以防止rviz报错-->
  <param name="use_sim_time" value="false" />
    
  <!--若需要自动重启，设置respawn为true-->
  <!-- 
  pkg指出ROS应该运行哪个pkg
  type是可执行文件的名称
  name则是可以任意给出的，它覆盖了原文件中ros::init指定的node的名字 -->




  <rosparam file="$(find steer_track)/config/camera2.yaml" command="load"/>
  <node pkg="steer_track" type="hk_camera_node" name="hikrobot_camera3" respawn="true" output="screen" >
    <param name="hk_name"  type = "string"    value="hk_camere3"/>
  </node>
  <node pkg="steer_track" type="hk_camera_node" name="hikrobot_camera2" respawn="true" output="screen" >
    <param name="hk_name"  type = "string"    value="hk_camere2"/>
  </node>
  <node pkg="steer_track" type="hk_camera_node" name="hikrobot_camera1" respawn="true" output="screen" >
    <param name="hk_name"  type = "string"    value="hk_camere1"/>
  </node>
  <!-- <node pkg="steer_track" type="hk_camera_node" name="hikrobot_camera3" respawn="true" output="screen" >
    <param name="hk_name"  type = "string"    value="hk_camere3"/>
  </node> -->

    <!--调用发布定位信息的文件，若使用optitrack，其中关键变量为steerRobot，需要修改为刚体的名字-->
  <arg name="climbot_name" default="steer_tk"/>
  <node pkg="steer_track" type="pose_vel_pub_node" name="pose_vel_pub_node" args="$(arg climbot_name)" output="screen" ns="robot_1"/>

<!--调用三个相机的apriltag节点-->
  <arg name="launch_prefix" default="" />
  <arg name="camera_name" default="/hikrobot_camera1" />
  <arg name="image_topic" default="image" />
  <arg name="queue_size" default="1" />
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_ros_continuous_node" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" ns="camera_1"> 
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="publish_tag_detections_image" type="bool" value="true" /><!-- default: false -->
    <param name="queue_size" type="int" value="$(arg queue_size)" />

    <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml"/>
    <rosparam command="load" file="$(find apriltag_ros)/config/tags.yaml"/>
  </node>

<!--调用三个相机的apriltag节点-->
  <arg name="camera_name2" default="/hikrobot_camera2" />
  <arg name="image_topic2" default="image" />
  <arg name="queue_size2" default="1" />
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_ros_continuous_node" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" ns="camera_2">
    <remap from="image_rect" to="$(arg camera_name2)/$(arg image_topic2)" />
    <remap from="camera_info" to="$(arg camera_name2)/camera_info" />

    <param name="publish_tag_detections_image" type="bool" value="true" />
    <param name="queue_size" type="int" value="$(arg queue_size2)" />
    <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml"/>
    <rosparam command="load" file="$(find apriltag_ros)/config/tags_cam2.yaml"/>
  </node>
<!--调用三个相机的apriltag节点-->
  <arg name="camera_name3" default="/hikrobot_camera3" />
  <arg name="image_topic3" default="image" />
  <arg name="queue_size3" default="1" />
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_ros_continuous_node" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" ns="camera_3">
    <remap from="image_rect" to="$(arg camera_name3)/$(arg image_topic3)" />
    <remap from="camera_info" to="$(arg camera_name3)/camera_info" />

    <param name="publish_tag_detections_image" type="bool" value="true" />
    <param name="queue_size" type="int" value="$(arg queue_size3)" />
    <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml"/>
    <rosparam command="load" file="$(find apriltag_ros)/config/tags_cam3.yaml"/>
  </node>


  <node pkg="steer_track" type="tcp_server_node" name="tcp_server_node" respawn="false" output="screen" ns="gongzhuang">  
        <param name="SERVER_PORT"               type = "int"    value="9528"/>
  </node>   

  <node pkg="steer_track" type="doublecam" name="doublecam" respawn="true" output="screen" ns="robot_1">
  </node>

  <node pkg="steer_track" type="motor_line" name="motor_line" output="screen"  ns="robot_1"/>
  <!--调用激光雷达的launch文件-->
  <!-- <include file="$(find lslidar_driver)/launch/lslidar_net_double.launch" /> 
  <include file="$(find lslidar_driver)/launch/distance.launch" /> -->

  <!--调用rtsp的launch文件-->
  <include file="$(find ros_rtsp)/launch/rtsp_streams.launch" />
  <!--调用udp的launch文件-->
  <node pkg="steer_track" type="udpserver.py" name="udpserver_node" output="screen"/>
</launch>